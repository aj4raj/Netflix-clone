{"version":3,"sources":["Row.js","requests.js","Banner.js","Navbar.js","App.js","index.js"],"names":["Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","axios","get","request","data","results","fetchData","className","map","movie","onClick","movieTrailer","name","original_name","then","url","urlParams","URLSearchParams","URL","search","catch","error","console","log","handleClick","src","poster_path","backdrop_path","alt","id","videoId","opts","height","width","playerVars","autoplay","API_KEY","baseURL","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanticMovies","fetchDocumentaries","Banner","setMovie","Math","floor","random","length","str","n","imageURL","style","backgroundSize","backgroundImage","overview","substr","Navbar","show","handleShow","window","addEventListener","scrollY","removeEventListener","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.50866f3b.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./Row.css\";\r\nimport YouTube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\n\r\nconst base_URL = \"https://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Row({ title, fetchUrl, isLargeRow }) {\r\n  const [movies, setMovies] = useState([]);\r\n  const [trailerUrl, setTrailerUrl] = useState(\"\");\r\n\r\n  // A snippet of code which runs based on a specific condition\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchUrl);\r\n      setMovies(request.data.results);\r\n      return request;\r\n    }\r\n    fetchData();\r\n    //    if [], run once when the row loads, and do not run again\r\n  }, [fetchUrl]);\r\n\r\n  const opts = {\r\n    height: \"390\",\r\n    width: \"99%\",\r\n    playerVars: {\r\n      autoplay: 1,\r\n    },\r\n  };\r\n\r\n  const handleClick = (movie) => {\r\n    if (trailerUrl) {\r\n      setTrailerUrl(\"\");\r\n    } else {\r\n      movieTrailer(movie?.title || movie?.name || movie?.original_name || \"\")\r\n        .then((url) => {\r\n          const urlParams = new URLSearchParams(new URL(url).search);\r\n          setTrailerUrl(urlParams.get(\"v\"));\r\n        })\r\n        .catch((error) => console.log(error));\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"row\">\r\n      <h2>{title}</h2>\r\n      <div className=\"row__posters\">\r\n        {movies.map((movie) => (\r\n          <img\r\n            key={movie.id}\r\n            onClick={() => handleClick(movie)}\r\n            className={`row__poster ${isLargeRow && \"row__posterLarger\"}`}\r\n            src={`${base_URL}${\r\n              isLargeRow ? movie.poster_path : movie.backdrop_path\r\n            }`}\r\n            alt={movie.name}\r\n          />\r\n        ))}\r\n      </div>\r\n      {trailerUrl && <YouTube videoId={trailerUrl} opts={opts} />}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","const API_KEY = \"f1a023b3dc0654ada5033301095b204e\";\r\nconst baseURL = \"https://api.themoviedb.org/3\";\r\n\r\nconst requests = {\r\n  fetchTrending: `${baseURL}/trending/all/week?api_key=${API_KEY}&language=en-US`,\r\n  fetchNetflixOriginals: `${baseURL}/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n  fetchTopRated: `${baseURL}/movie/top_rated?api_key=${API_KEY}&language=en=US`,\r\n  fetchActionMovies: `${baseURL}/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n  fetchComedyMovies: `${baseURL}/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n  fetchHorrorMovies: `${baseURL}/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n  fetchRomanticMovies: `${baseURL}/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n  fetchDocumentaries: `${baseURL}/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n};\r\n\r\nexport default requests;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport requests from \"./requests\";\r\nimport \"./Banner.css\";\r\nfunction Banner() {\r\n  const [movie, setMovie] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(requests.fetchNetflixOriginals);\r\n      setMovie(\r\n        request.data.results[\r\n          Math.floor(Math.random() * request.data.results.length - 1)\r\n        ]\r\n      );\r\n      return request;\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  let imageURL = `https://image.tmdb.org/t/p/original/${movie?.backdrop_path}`;\r\n\r\n  function truncate(str, n) {\r\n    return str?.length > n ? str.substr(0, n - 1) + \"...\" : str;\r\n  }\r\n\r\n  return (\r\n    <header\r\n      className=\"banner\"\r\n      style={{\r\n        width: \"100%\",\r\n        backgroundSize: \"cover\",\r\n        backgroundImage: `url(${imageURL})`,\r\n      }}\r\n    >\r\n      <div className=\"banner__contents\">\r\n        <h1 className=\"banner__title\">\r\n          {movie?.title || movie?.name || movie?.original_name}\r\n        </h1>\r\n        <div className=\"banner__buttons\">\r\n          <button className=\"banner__button\">Play</button>\r\n          <button className=\"banner__button\">My List</button>\r\n        </div>\r\n        <h1 className=\"banner__description\">\r\n          {truncate(movie?.overview, 150)}\r\n        </h1>\r\n      </div>\r\n      <div className=\"banner--fadeBottom\" />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Navbar.css\";\r\n\r\nfunction Navbar() {\r\n  const [show, handleShow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", () => {\r\n      if (window.scrollY > 100) {\r\n        handleShow(true);\r\n      } else handleShow(false);\r\n    });\r\n    return () => {\r\n      window.removeEventListener(\"scroll\");\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`nav ${show && \"nav__black\"}`}>\r\n      <img\r\n        className=\"nav__logo\"\r\n        src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\"\r\n        alt=\"Netflix Logo\"\r\n      />\r\n      <img\r\n        className=\"nav__avatar\"\r\n        src=\"https://mir-s3-cdn-cf.behance.net/project_modules/disp/366be133850498.56ba69ac36858.png\"\r\n        alt=\"Netflix Logo\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\nimport Row from \"./Row\";\nimport \"./App.css\";\nimport requests from \"./requests\";\nimport Banner from \"./Banner\";\nimport Navbar from \"./Navbar\";\n\nfunction App() {\n  return (\n    <>\n      <div className=\"app\">\n        <Navbar />\n        <Banner />\n        <Row\n          title=\"NETFLIX ORIGINALS\"\n          fetchUrl={requests.fetchNetflixOriginals}\n          isLargeRow={true}\n        />\n        <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} />\n        <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} />\n        <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} />\n        <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} />\n        <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} />\n        <Row title=\"Romantic Movies\" fetchUrl={requests.fetchRomanticMovies} />\n        <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}